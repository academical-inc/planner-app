#!/usr/bin/env coffee

# Usage:
# Will generate spec file for given module
#
# spec <modulePath>
#
# modulePath: path for module relative to app/scripts.
#
# Example:
#   spec components/MyReactComponent
#   => Creates test/spec/components/MyReactComponent.spec.coffee

Mustache  = require 'mustache'
parseArgs = require 'minimist'
fs        = require 'fs'


specTemplate = """

H{{{padding}}}= require '../../SpecHelper'
{{{moduleName}}} = require '../../../app/scripts/{{{modulePath}}}'


describe '{{{moduleName}}}', ->

{{#isComponent}}
  describe '#render', ->


{{/isComponent}}

"""


main = ->
  args       = parseArgs process.argv.slice(2)
  modulePath = args._[0]
  modulePath = modulePath.replace ".coffee", ""
  modulePath = modulePath.replace /\/$/, ""
  modulePath = modulePath.replace /^\//, ""

  pathParts  = modulePath.split("/")
  moduleName = pathParts[pathParts.length-1]

  relativeDirPath = pathParts.slice(0, pathParts.length-1).join "/"
  moduleDir       = "#{__dirname}/../app/scripts/#{relativeDirPath}"

  if not fs.existsSync(moduleDir)
    console.log "Module directory 'app/scripts/#{relativeDirPath}' does not
                exist"
    process.exit()

  data =
    modulePath: modulePath
    moduleName: moduleName
    isComponent: pathParts[0] == "components"
    padding: Array(moduleName.length+1).join " "

  specPath = "#{__dirname}/../test/spec/#{modulePath}.spec.coffee"
  content  = Mustache.render specTemplate, data

  console.log "Creating spec file for: #{modulePath}"
  if fs.existsSync specPath
    console.log "A spec already exists at test/spec/#{modulePath}.spec.coffee"
    console.log "Remove it to generate a new one"
    process.exit()

  fs.writeFile specPath, content, (err)->
    if err
      console.log err
    else
      console.log "The spec file was saved at
                  test/spec/#{modulePath}.spec.coffee!"

main()
